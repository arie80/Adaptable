// Optional
body {
	background: #666;
	margin: 0;
	padding: 0;
}

// Minimal reset
a img {
	border: none;
}

// Makes images responsive
img {
	max-width: 100%;
}

pre {
	color: #DFDFDF;
	display: none;
	font-size: 2em;
	margin: 2em 0;
	padding: 0;
	text-align: center;
	text-shadow: 0 1px 2px #333;
}

#desktop {
	display: block;
}

// The containing element the grid will fill
#box {
	background: #FFF;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	padding: 1em;
	margin: 0 auto;
	width: 90%;
}

// The mixin calculations
@mixin grid($items) {
	list-style: none;
	margin: 0;
	overflow: hidden;
	padding: 0;
	li {
		float: left;
		
		// Sets margin and width when your grid only contains 1 image
		&:nth-child(1n) {
			margin: 5% 0 0 0;
		}
		width: 100%;
		
		// If you include more than one image in a grid, calculate dimensions and add margin
		@if $items > 1 {
		
			// Selecting all children so a media query adjustment resets all breaking photos
			&:nth-child(1n) {
				margin: (5% / ($items - 1)) (5% / ($items - 1)) 0 0;
			}
			
			width: (95% / $items);
		}
		
		// Removes margin from the last image in a row
		&:nth-child(#{$items}n) {
			margin-right: 0;
		}
		
		// Removes margin from first row of images
		&:nth-child(-n+#{$items}) {
			margin-top: 0;
		}
		img, a {
			float: left;
		}
		
		// Used if your photos have titles or captions
		a {
			text-align: center;
			width: 100%;
		}
	}
}

// Include 5 images per row
ul {
	@include grid(5);
}

// Break to 3 image per row when on mobile
@media (max-width: 480px) {
	ul {
		@include grid(3);
	}
	#desktop {
		display: none;
	}
	#mobile {
		display: block;
		font-size: 1.5em;
	}
}